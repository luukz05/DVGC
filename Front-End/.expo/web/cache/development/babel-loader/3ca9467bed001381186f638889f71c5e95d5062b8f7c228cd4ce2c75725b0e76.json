{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from './NotificationScheduler';\nexport default async function getAllScheduledNotificationsAsync() {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n  return await NotificationScheduler.getAllScheduledNotificationsAsync();\n}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","getAllScheduledNotificationsAsync"],"sources":["C:\\Users\\eusou\\Desktop\\DVGC Mobile\\Front End\\node_modules\\expo-notifications\\src\\getAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationRequest } from './Notifications.types';\n\n/**\n * Fetches information about all scheduled notifications.\n * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n * @header schedule\n */\nexport default async function getAllScheduledNotificationsAsync(): Promise<NotificationRequest[]> {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.getAllScheduledNotificationsAsync();\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,yBAAyB;AAQ3D,eAAe,eAAeC,iCAAiCA,CAAA;EAC7D,IAAI,CAACD,qBAAqB,CAACC,iCAAiC,EAAE;IAC5D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,mCAAmC,CAAC;;EAGrF,OAAO,MAAMC,qBAAqB,CAACC,iCAAiC,EAAE;AACxE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}