{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eusou\\\\Desktop\\\\DVGC Mobile\\\\Front End\\\\src\\\\components\\\\WebsiteButton.jsx\";\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from './ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WebsiteButton({\n  websiteUrl,\n  ButtonName\n}) {\n  const {\n    isDarkMode\n  } = useTheme();\n  const styles = isDarkMode ? darkStyles : lightStyles;\n  const openWebsite = () => {\n    Linking.openURL(websiteUrl);\n  };\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.button,\n    onPress: openWebsite,\n    children: _jsxDEV(Text, {\n      style: styles.buttonText,\n      children: ButtonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n;\nWebsiteButton.propTypes = {\n  websiteUrl: PropTypes.string.isRequired\n};\nconst lightStyles = StyleSheet.create({\n  button: {\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    alignSelf: 'center',\n    margin: 10,\n    backgroundColor: \"#eee\",\n    width: '20%',\n    borderColor: \"#555\"\n  },\n  buttonText: {\n    color: '#000000',\n    fontSize: 16\n  }\n});\nconst darkStyles = StyleSheet.create({\n  button: {\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    alignSelf: 'center',\n    margin: 10,\n    width: \"90%\",\n    borderColor: \"#555\",\n    backgroundColor: \"#242424\"\n  },\n  buttonText: {\n    color: '#ffffff',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","Text","Linking","StyleSheet","PropTypes","useTheme","jsxDEV","_jsxDEV","WebsiteButton","websiteUrl","ButtonName","isDarkMode","styles","darkStyles","lightStyles","openWebsite","openURL","style","button","onPress","children","buttonText","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","string","isRequired","create","borderWidth","padding","borderRadius","alignItems","alignSelf","margin","backgroundColor","width","borderColor","color","fontSize"],"sources":["C:/Users/eusou/Desktop/DVGC Mobile/Front End/src/components/WebsiteButton.jsx"],"sourcesContent":["// WebsiteButton.js\r\nimport React from 'react';\r\nimport { TouchableOpacity, Text, Linking, StyleSheet } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from './ThemeContext';\r\n\r\nexport default function WebsiteButton({ websiteUrl, ButtonName }){\r\n  const { isDarkMode } = useTheme();\r\n  const styles = isDarkMode ? darkStyles : lightStyles;\r\n  \r\n  \r\n  const openWebsite = () => {\r\n    Linking.openURL(websiteUrl);\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.button} onPress={openWebsite}>\r\n      <Text style={styles.buttonText}>{ButtonName}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nWebsiteButton.propTypes = {\r\n  websiteUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nconst lightStyles = StyleSheet.create({\r\n  button: {\r\n    borderWidth:1,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    alignSelf:'center',\r\n    margin: 10,\r\n    backgroundColor:\"#eee\",\r\n    width:'20%',\r\n    borderColor:\"#555\"\r\n  },\r\n  buttonText: {\r\n    color: '#000000',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nconst darkStyles = StyleSheet.create({\r\n  button: {\r\n    borderWidth:1,\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    margin: 10,\r\n    width:\"90%\",\r\n    borderColor:\"#555\",\r\n    backgroundColor:\"#242424\",\r\n  },\r\n  buttonText: {\r\n    color: '#ffffff',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,OAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAC;EAC/D,MAAM;IAAEC;EAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACjC,MAAMO,MAAM,GAAGD,UAAU,GAAGE,UAAU,GAAGC,WAAW;EAGpD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBb,OAAO,CAACc,OAAO,CAACP,UAAU,CAAC;EAC7B,CAAC;EAED,OACEF,OAAA,CAACP,gBAAgB;IAACiB,KAAK,EAAEL,MAAM,CAACM,MAAO;IAACC,OAAO,EAAEJ,WAAY;IAAAK,QAAA,EAC3Db,OAAA,CAACN,IAAI;MAACgB,KAAK,EAAEL,MAAM,CAACS,UAAW;MAAAD,QAAA,EAAEV;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEvB;AAAC;AAEDjB,aAAa,CAACkB,SAAS,GAAG;EACxBjB,UAAU,EAAEL,SAAS,CAACuB,MAAM,CAACC;AAC/B,CAAC;AAED,MAAMd,WAAW,GAAGX,UAAU,CAAC0B,MAAM,CAAC;EACpCX,MAAM,EAAE;IACNY,WAAW,EAAC,CAAC;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAC,QAAQ;IAClBC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAC,MAAM;IACtBC,KAAK,EAAC,KAAK;IACXC,WAAW,EAAC;EACd,CAAC;EACDjB,UAAU,EAAE;IACVkB,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,MAAM3B,UAAU,GAAGV,UAAU,CAAC0B,MAAM,CAAC;EACnCX,MAAM,EAAE;IACNY,WAAW,EAAC,CAAC;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,EAAE;IACVE,KAAK,EAAC,KAAK;IACXC,WAAW,EAAC,MAAM;IAClBF,eAAe,EAAC;EAClB,CAAC;EACDf,UAAU,EAAE;IACVkB,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}