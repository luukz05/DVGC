{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport NotificationPresenter from './NotificationPresenterModule';\nexport default async function getPresentedNotificationsAsync() {\n  if (!NotificationPresenter.getPresentedNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n  }\n  return await NotificationPresenter.getPresentedNotificationsAsync();\n}","map":{"version":3,"names":["UnavailabilityError","NotificationPresenter","getPresentedNotificationsAsync"],"sources":["C:\\Users\\eusou\\Desktop\\DVGC Mobile\\Front End\\node_modules\\expo-notifications\\src\\getPresentedNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { Notification } from './Notifications.types';\n\n/**\n * Fetches information about all notifications present in the notification tray (Notification Center).\n * > This method is not supported on Android below 6.0 (API level 23) â€“ on these devices it will resolve to an empty array.\n * @return A Promise which resolves with a list of notifications ([`Notification`](#notification)) currently present in the notification tray (Notification Center).\n * @header dismiss\n */\nexport default async function getPresentedNotificationsAsync(): Promise<Notification[]> {\n  if (!NotificationPresenter.getPresentedNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n  }\n\n  return await NotificationPresenter.getPresentedNotificationsAsync();\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB,MAAM,+BAA+B;AASjE,eAAe,eAAeC,8BAA8BA,CAAA;EAC1D,IAAI,CAACD,qBAAqB,CAACC,8BAA8B,EAAE;IACzD,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,gCAAgC,CAAC;;EAGlF,OAAO,MAAMC,qBAAqB,CAACC,8BAA8B,EAAE;AACrE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}